package oracle.kv.impl.mgmt.snmp.generated;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling OracleNosqlMIB.
//

// java imports
//
import java.io.Serializable;

// jmx imports
//
import javax.management.MBeanServer;
import com.sun.management.snmp.*;

// jdmk imports
//
import com.sun.management.snmp.agent.SnmpMib;

/**
 * The class is used for implementing the "Admin" group.
 * The group is defined with the following oid: 1.3.6.1.4.1.111.42.5.
 */
@SuppressWarnings({"serial","unused"})
public class Admin implements AdminMBean, Serializable {

    /**
     * Variable for storing the value of "AdminPollPeriod".
     * The variable is identified by: "1.3.6.1.4.1.111.42.5.6".
     */
    protected Integer AdminPollPeriod = new Integer(1);

    /**
     * Variable for storing the value of "AdminLogFileLimit".
     * The variable is identified by: "1.3.6.1.4.1.111.42.5.5".
     */
    protected Integer AdminLogFileLimit = new Integer(1);

    /**
     * Variable for storing the value of "AdminLogFileCount".
     * The variable is identified by: "1.3.6.1.4.1.111.42.5.4".
     */
    protected Integer AdminLogFileCount = new Integer(1);

    /**
     * Variable for storing the value of "AdminHttpPort".
     * The variable is identified by: "1.3.6.1.4.1.111.42.5.3".
     */
    protected Integer AdminHttpPort = new Integer(1);

    /**
     * Variable for storing the value of "AdminServiceStatus".
     * The variable is identified by: "1.3.6.1.4.1.111.42.5.2".
     */
    protected EnumAdminServiceStatus AdminServiceStatus = new EnumAdminServiceStatus();

    /**
     * Variable for storing the value of "AdminId".
     * The variable is identified by: "1.3.6.1.4.1.111.42.5.1".
     */
    protected Integer AdminId = new Integer(1);

    /**
     * Variable for storing the value of "AdminIsMaster".
     * The variable is identified by: "1.3.6.1.4.1.111.42.5.8".
     */
    protected EnumAdminIsMaster AdminIsMaster = new EnumAdminIsMaster();

    /**
     * Variable for storing the value of "AdminEventExpiryAge".
     * The variable is identified by: "1.3.6.1.4.1.111.42.5.7".
     */
    protected Integer AdminEventExpiryAge = new Integer(1);


    /**
     * Constructor for the "Admin" group.
     * If the group contains a table, the entries created through an SNMP SET will not be registered in Java DMK.
     */
    public Admin(SnmpMib myMib) {
    }


    /**
     * Constructor for the "Admin" group.
     * If the group contains a table, the entries created through an SNMP SET will be AUTOMATICALLY REGISTERED in Java DMK.
     */
    public Admin(SnmpMib myMib, MBeanServer server) {
    }

    /**
     * Getter for the "AdminPollPeriod" variable.
     */
    @Override
    public Integer getAdminPollPeriod() throws SnmpStatusException {
        return AdminPollPeriod;
    }

    /**
     * Getter for the "AdminLogFileLimit" variable.
     */
    @Override
    public Integer getAdminLogFileLimit() throws SnmpStatusException {
        return AdminLogFileLimit;
    }

    /**
     * Getter for the "AdminLogFileCount" variable.
     */
    @Override
    public Integer getAdminLogFileCount() throws SnmpStatusException {
        return AdminLogFileCount;
    }

    /**
     * Getter for the "AdminHttpPort" variable.
     */
    @Override
    public Integer getAdminHttpPort() throws SnmpStatusException {
        return AdminHttpPort;
    }

    /**
     * Getter for the "AdminServiceStatus" variable.
     */
    @Override
    public EnumAdminServiceStatus getAdminServiceStatus() throws SnmpStatusException {
        return AdminServiceStatus;
    }

    /**
     * Getter for the "AdminId" variable.
     */
    @Override
    public Integer getAdminId() throws SnmpStatusException {
        return AdminId;
    }

    /**
     * Getter for the "AdminIsMaster" variable.
     */
    @Override
    public EnumAdminIsMaster getAdminIsMaster() throws SnmpStatusException {
        return AdminIsMaster;
    }

    /**
     * Getter for the "AdminEventExpiryAge" variable.
     */
    @Override
    public Integer getAdminEventExpiryAge() throws SnmpStatusException {
        return AdminEventExpiryAge;
    }

}
